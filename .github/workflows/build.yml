name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - version: 3.6
            test: INTEGRATION_TEST
          - version: 3.6
            test: UNIT_TEST
          - version: 3.6
            test: ACCEPTANCE_TEST
          - version: 3.7
            test: INTEGRATION_TEST
          - version: 3.7
            test: UNIT_TEST
          - version: 3.7
            test: ACCEPTANCE_TEST
          - version: 3.8
            test: LINT_TEST
          - version: 3.8
            test: INTEGRATION_TEST
          - version: 3.8
            test: UNIT_TEST
          - version: 3.8
            test: ACCEPTANCE_TEST
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@2.1.1
      - name: Set up Python ${{ matrix.python.version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}
      - name: Cache pip dependencies
        if: matrix.python.test != 'LINT_TEST'
        uses: actions/cache@v2
        id: deps_cache
        with:
          path: |
            ${{ env.pythonLocation }}/lib/*/site-packages/*
            ${{ env.pythonLocation }}/bin/*
          key: ${{ runner.os }}-pip-${{ matrix.python.version }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python.version }}-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        if: matrix.python.test != 'LINT_TEST'
        run: | # NOTE: please keep the list of packages ordered
          sudo apt update
          sudo apt install \
            ffmpeg \
            gifsicle \
            libboost-python-dev \
            libcurl4-openssl-dev \
            libexiv2-dev \
            libgnutls28-dev \
            libimage-exiftool-perl \
            libjpeg-progs \
            libssl-dev \
            libwebp-dev \
            python-all-dev \
            scons \
            webp
      - name: Upgrade pip, run make setup, and upgrade test tools
        if: matrix.python.test != 'LINT_TEST'
        run: |
          pip install --upgrade pip
          make setup-ci
          pip install --upgrade coveralls pytest pytest-cov
      - name: Install linters
        if: matrix.python.test == 'LINT_TEST'
        run: |
          pip install --upgrade pip
          pip install --upgrade black flake8 isort
      - name: Set environment variables for next action
        run: echo "${{ matrix.python.test }}=1" >> $GITHUB_ENV
      - name: Compile Thumbor extensions
        if: matrix.python.test == 'ACCEPTANCE_TEST'
        run: |
          sudo chmod -R a+w thumbor/thumbor/ext/filters
          make compile_ext
      - name: Run ${{ matrix.python.test }}
        run: make test-ci
      - name: Send coverage stats to Codecov
        if: matrix.python.test == 'UNIT_TEST'
        run: bash <(curl -s https://codecov.io/bash) -f target/debug/lcov.info
